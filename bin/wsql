#!/usr/bin/php
<?php
/* [WingPHP]
 *  - Command line tool 
 *
 * The MIT License
 * Copyright (c) 2016 WingPHP < http://wingphp.net >
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in
 * all copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 * THE SOFTWARE.
 */

//---------------------------------
// Arguments
//---------------------------------
//---------------------
// Usage
//---------------------
if( $argc === 1 || preg_match('/^help$/', $argv[1]) ){
    usage();
    exit(0);
}

//---------------------
// Validation
//---------------------
// SQL (string)
chdir( getenv('PWD') );
$sql = $argv[1];
if( is_file($sql) ){
    $sql_str = file_get_contents($sql);
}
else{
    $sql_str = $sql;
}

// RunMode ('select' or 'exec')
$mode = (!empty($argv[2]) && preg_match('/^select|exec$/', $argv[2]))? $argv[2]:'select';

// Export Format ('json' or 'tsv' or 'php')
$format  = (!empty($argv[3]) && preg_match('/^json|json-pretty|csv|tsv|php$/', $argv[3]))? $argv[3]:'php';

//Database Name ('master' or ...)
$dbname = (!empty($argv[4]))? $argv[4]:'master';

//---------------------------------
// Initialize
//---------------------------------
require_once('lib/common.php');
require_once('../model/base.php');

//---------------------------------
// Run SQL
//---------------------------------
run_sql($sql_str, $mode, $format, $dbname);


/**
 * Run SQL
 */
function run_sql($sql_str, $mode, $format, $dbname){

    $m = new BaseModel();

    //---------------------------------
    // change db
    //---------------------------------
    if( $dbname !== 'master' ){
        try{
            $m->usedb($dbname);
        }
        catch(WsException $e){
            errormsg("run_sql(): ".$e->getMessage());
            exit(1);
        }
    }

    //---------------------------------
    // Transaction mode
    //---------------------------------
    if($mode === 'exec'){
        try{
            $m->begin();
            $m->exec($sql_str);
            $m->commit();
        }
        catch(WsException $e){
            $m->rollback();
            errormsg("run_sql(): ".$e->getMessage());
        }
    }
    //---------------------------------
    // select mode
    //---------------------------------
    else if($mode === 'select'){
        try{
            $buff = $m->select($sql_str);
            switch ($format) {
                case 'json':
                    echo json_encode($buff);
                    echo "\n";
                    break;

                case 'json-pretty':
                    echo json_encode($buff, JSON_PRETTY_PRINT);
                    echo "\n";
                    break;

                case 'csv':
                    foreach ($buff as $line) {
                        fputcsv(STDOUT, $line);
                    }
                    echo "\n";
                    break;

                case 'tsv':
                    foreach ($buff as $line) {
                        fputcsv(STDOUT, $line, "\t");
                    }
                    echo "\n";
                    break;
                    
                case 'php':
                default:
                    print_r($buff);
                    break;
            }
        }
        catch(WsException $e){
            errormsg("run_sql(): ".$e->getMessage());
        }
    }
    //---------------------------------
    // UnKnown mode
    //---------------------------------
    else{
        errormsg("UnKnown Command ($mode)");
    }
}


/**
 * Usage
 */
function usage(){
    echo "Usage: wsql {SQLString|filepath} [select|exec] [json|json-pretty|csv|tsv|php] [database name]\n";
    echo "  Example.\n";
    echo "    $ wsql 'select * from test'\n";
    echo "    $ wsql path/to/file.sql insert json master2\n";
}